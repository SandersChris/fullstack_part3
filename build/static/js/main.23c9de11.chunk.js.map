{"version":3,"sources":["components/persons.js","components/form.js","components/heading.js","components/formfilter.js","services/persons.js","components/error.js","components/add.js","App.js","index.js"],"names":["Persons","persons","onClick","map","x","key","id","name","number","value","FormComponent","handleNameAdd","newName","newNumber","handleNumberAdd","addPerson","onSubmit","onChange","type","Heading","heading","FormFilter","handleFilterAdd","baseUrl","axios","get","newObject","post","delete","changedNumber","put","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","NotificationAdd","App","useState","setPersons","setNewName","setNewNumber","newFilter","setNewFilter","newAdd","setNewAdd","newError","setNewError","handleClick","event","window","confirm","phoneService","target","catch","error","setTimeout","useEffect","then","response","data","nameFilter","filter","toLowerCase","includes","preventDefault","phoneObject","person","find","p","changedNum","concat","console","log","numbers","ReactDOM","render","document","getElementById"],"mappings":"oNAOeA,EALC,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,QAAZ,OACZD,EAAQE,IAAI,SAACC,GAAD,OACR,yBAAKC,IAAKD,EAAEE,IAAI,2BAAIF,EAAEG,KAAN,IAAaH,EAAEI,QAC3B,4BAAQC,MAAOL,EAAEE,GAAIJ,QAASA,GAA9B,cCWGQ,EAdO,SAAC,GAAqE,IAApEC,EAAmE,EAAnEA,cAAeC,EAAoD,EAApDA,QAASC,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,gBAAiBC,EAAe,EAAfA,UAC5E,OACI,0BAAMC,SAAUD,GACZ,6BACI,sCAAW,2BAAON,MAAOG,EAASK,SAAUN,KAC5C,wCAAa,2BAAOF,MAAOI,EAAWI,SAAUH,MAEpD,6BACI,4BAAQI,KAAK,UAAb,UCNGC,EAFC,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OAAe,4BAAKA,ICGrBC,EAHI,SAAC,GAAD,IAAEC,EAAF,EAAEA,gBAAF,OACf,gDAAqB,2BAAOL,SAAUK,M,gBCFpCC,EAAU,gCAWD,EATA,kBAAMC,IAAMC,IAAIF,IAShB,EAPA,SAAAG,GAAS,OAAIF,IAAMG,KAAKJ,EAASG,IAOjC,EALA,SAAApB,GAAE,OAAIkB,IAAMI,OAAN,UAAgBL,EAAhB,YAA2BjB,KAKjC,EAHA,SAACA,EAAIuB,GAAL,OAAuBL,IAAMM,IAAN,UAAaP,EAAb,YAAwBjB,GAAMuB,ICgBrDE,EAvBM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAYpB,OAAgB,OAAZA,EACK,KAIP,yBAAKC,MAhBkB,CACrBC,MAAO,MACPC,WAAY,YACZC,SAAU,GACVC,YAAa,QACbC,aAAc,EACdC,QAAS,GACTC,aAAc,KAUbR,ICIMS,EAtBS,SAAC,GAAiB,IAAfT,EAAc,EAAdA,QAWvB,OAAgB,OAAZA,EACK,KAIP,yBAAKC,MAfmB,CACtBC,MAAO,QACPC,WAAY,OACZC,SAAU,GACVC,YAAa,QACbC,aAAc,EACdC,QAAS,GACTC,aAAc,KASbR,I,4NCVT,IAyGeU,EAzGH,WAAO,IAAD,EACeC,mBAAS,IADxB,mBACR1C,EADQ,KACC2C,EADD,OAEgBD,mBAAS,IAFzB,mBAER/B,EAFQ,KAECiC,EAFD,OAGoBF,mBAAS,IAH7B,mBAGR9B,EAHQ,KAGGiC,EAHH,OAIoBH,mBAAS,IAJ7B,mBAIRI,EAJQ,KAIGC,EAJH,OAKcL,mBAAS,MALvB,mBAKRM,EALQ,KAKAC,EALA,OAMkBP,mBAAS,MAN3B,mBAMRQ,EANQ,KAMEC,EANF,KAoBVC,EAAc,SAACC,GACfC,OAAOC,QAAQ,kDACnBC,EACQH,EAAMI,OAAOjD,OACpBkD,MAAM,SAAAC,GACLR,EAAY,qCACZS,WAAW,WACTT,EAAY,OACX,QAKPU,oBAnBa,WACXL,IAECM,KAAK,SAAAC,GAAQ,OAAIpB,EAAWoB,EAASC,SAgBxB,CAACZ,IAEjB,IA+CMa,EAAa,WAEjB,OADajE,EAAQkE,OAAO,SAAA/D,GAAC,OAAIA,EAAEG,KAAK6D,cAAcC,SAAStB,EAAUqB,kBAI3E,OACE,6BACE,kBAAC,EAAD,CAAShD,QAAQ,cACf,kBAAC,EAAD,CAAYE,gBA9EM,SAACgC,GAAD,OAAWN,EAAaM,EAAMI,OAAOjD,UA+EzD,kBAAC,EAAD,CAASW,QAAQ,gBACf,kBAAC,EAAD,CAAiBY,QAASiB,IAC1B,kBAAC,EAAD,CAAgBlC,UA1DJ,SAACuC,GACjBA,EAAMgB,iBACN,IAAMC,EAAc,CAClBhE,KAAMK,EACNJ,OAAQK,GAOV,GAHoBZ,EAAQE,IAAI,SAAAC,GAAC,OAAIA,EAAEG,OAGvB8D,SAASzD,IACvB,GAAG2C,OAAOC,QAAQ,0DAA2D,CAC3E,IAAMgB,EAASvE,EAAQwE,KAAK,SAAAC,GAAC,OAAIA,EAAEnE,OAASK,IACtCN,EAAKkE,EAAOlE,GACZqE,E,qVAAU,IAAQH,EAAR,CAAgBhE,OAAQK,IAExC4C,EACQnD,EAAIqE,GACXZ,KAAK,SAAAC,GACJpB,EAAW3C,EAAQE,IAAI,SAAAqE,GAAM,OAAIA,EAAOlE,KAAOA,EAAKkE,EAASR,EAASC,UAEvEN,MAAM,SAAAC,GACLR,EAAY,GAAD,OAAIvC,EAAJ,uCACXgD,WAAW,WACTT,EAAY,OACX,aAIPK,EACUc,GACPR,KAAK,SAAAC,GACNpB,EAAW3C,EAAQ2E,OAAOZ,EAASC,OACnCpB,EAAW,IACXC,EAAa,IAEbI,EAAU,GAAD,OAAItC,EAAJ,YACTiD,WAAW,WACTX,EAAU,OACT,OAEFS,MAAM,SAAAC,GAAK,OAAIiB,QAAQC,IAAIlB,MAiBZhD,QAASA,EACTC,UAAWA,EACXC,gBAtFE,SAACwC,GAAD,OAAWR,EAAaQ,EAAMI,OAAOjD,QAuFvCE,cAzFA,SAAC2C,GAAD,OAAWT,EAAWS,EAAMI,OAAOjD,UA0FrD,kBAAC,EAAD,CAASW,QAAQ,WACf,kBAAC,EAAD,CAAcY,QAASmB,IACvB,kBAAC,EAAD,CAASlD,QAASiE,IAAca,QAASb,IAAchE,QAASmD,MCzGxE2B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.23c9de11.chunk.js","sourcesContent":["import React from 'react';\n\nconst Persons = ({ persons, onClick }) => \n    persons.map((x) => \n        <div key={x.id}><p>{x.name} {x.number}</p> \n            <button value={x.id} onClick={onClick}>Delete</button>\n        </div>)\nexport default Persons","import React from \"react\";\n\nconst FormComponent = ({handleNameAdd, newName, newNumber, handleNumberAdd, addPerson}) => {\nreturn (\n    <form onSubmit={addPerson}>\n        <div>\n            <div>name: <input value={newName} onChange={handleNameAdd}/></div>\n            <div>number: <input value={newNumber} onChange={handleNumberAdd}/></div>\n        </div>\n        <div>\n            <button type=\"submit\">add</button>\n        </div>\n    </form>\n    )\n}\n\nexport default FormComponent","import React from 'react';\n\nconst Heading = ({heading}) => <h2>{heading}</h2>\n\nexport default Heading","import React from 'react';\n\nconst FormFilter = ({handleFilterAdd}) => \n    <div>Filter results: <input onChange={handleFilterAdd} /></div>\n\nexport default FormFilter","import axios from 'axios';\nconst baseUrl = 'http://localhost:3001/persons'\n\nconst getAll = () => axios.get(baseUrl)\n\nconst create = newObject => axios.post(baseUrl, newObject)\n\nconst remove = id => axios.delete(`${baseUrl}/${id}`)\n\nconst update = (id, changedNumber) => axios.put(`${baseUrl}/${id}`, changedNumber)\n\n\nexport default { getAll, create, remove, update}","import React from 'react';\n\nconst Notification = ({ message }) => {\n    const notificationStyle= {\n        color: 'red',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10\n\n    }\n\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div style={notificationStyle} >\n        {message}\n      </div>\n    )\n  }\n\nexport default Notification","import React from 'react';\n\nconst NotificationAdd = ({ message }) => {\n    const notificationStyle = {\n        color: 'green',\n        background: 'grey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10\n    }\n\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div style={notificationStyle}>\n        {message}\n      </div>\n    )\n  }\n\nexport default NotificationAdd","import React, { useState, useEffect } from 'react'\nimport Persons from './components/persons'\nimport FormComponent from './components/form'\nimport Heading from './components/heading'\nimport FormFilter from './components/formfilter'\nimport phoneService from './services/persons'\nimport Notification from './components/error'\nimport NotificationAdd from './components/add'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ newAdd, setNewAdd ] = useState(null)\n  const [ newError, setNewError ] = useState(null)\n\n  const handleNameAdd = (event) => setNewName(event.target.value)\n\n  const handleNumberAdd = (event) => setNewNumber(event.target.value)\n\n  const handleFilterAdd = (event) => setNewFilter(event.target.value)\n\n  const hook = () => {\n    phoneService\n    .getAll()\n    .then(response => setPersons(response.data))\n  }\n\n  const handleClick = (event) => {\n    if (window.confirm(\"Are you sure you want to delete this contact?\")) {\n    phoneService\n    .remove(event.target.value)\n    .catch(error => {\n      setNewError('Contact has already been removed.')\n      setTimeout(() => {\n        setNewError(null)\n      }, 5000)\n    })\n    }\n  }\n\n  useEffect(hook, [handleClick])\n  \n  const addPerson = (event) => {\n    event.preventDefault() // prevents rerendering\n    const phoneObject = {\n      name: newName, // takes whatever handleNameAdd returns\n      number: newNumber \n    }\n\n    // grabs name attribute from list\n    const personNames = persons.map(x => x.name)\n\n    // check for duplicate names\n    if (personNames.includes(newName)) {\n      if(window.confirm(\"Are you sure you want to change this contact's number?\")) {\n        const person = persons.find(p => p.name === newName)\n        const id = person.id\n        const changedNum = { ...person, number: newNumber }\n\n        phoneService\n        .update(id, changedNum)\n        .then(response => {\n          setPersons(persons.map(person => person.id !== id ? person : response.data)) \n        })\n        .catch(error => {\n          setNewError(`${newNumber} has been removed from the server!`)\n          setTimeout(() => {\n            setNewError(null)\n          }, 5000)\n        })\n      }\n    } else {\n      phoneService\n        .create(phoneObject)\n        .then(response => {\n        setPersons(persons.concat(response.data))\n        setNewName('')\n        setNewNumber('')\n\n        setNewAdd(`${newName} added!`)\n        setTimeout(() => {\n          setNewAdd(null)\n        }, 5000)\n        })\n        .catch(error => console.log(error))\n      }\n  }\n\n  // filters objects down to specified names\n  const nameFilter = () => {\n    const name = persons.filter(x => x.name.toLowerCase().includes(newFilter.toLowerCase()))\n    return name\n  }\n\n  return (\n    <div>\n      <Heading heading='PhoneBook' />\n        <FormFilter handleFilterAdd={handleFilterAdd} />\n      <Heading heading='Add Contact' />\n        <NotificationAdd message={newAdd} />\n        <FormComponent  addPerson={addPerson} \n                        newName={newName} \n                        newNumber={newNumber} \n                        handleNumberAdd={handleNumberAdd} \n                        handleNameAdd={handleNameAdd} />\n      <Heading heading='Number' />\n        <Notification message={newError} />\n        <Persons persons={nameFilter()} numbers={nameFilter()} onClick={handleClick}/>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}